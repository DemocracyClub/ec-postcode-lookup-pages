version: 2.1
orbs:
  codecov: codecov/codecov@3.1.0
  aws-cli: circleci/aws-cli@3.1

jobs:
  install_and_update_dependencies:
    docker:
      - image: cimg/python:3.8.12-browsers
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Pipfile.lock" }}
      - run: &install-pipenv pip install -U pipenv pip --quiet --no-input
      - run: pipenv install --dev
      - run: pipenv run pipenv check # before save_cache so an insecure cache is never saved
      - save_cache:
          when: on_success
          paths:
            - ~/.local/share/virtualenvs/
          key: v1-dependencies-{{ checksum "Pipfile.lock" }}

  test:
    docker:
      - image: cimg/python:3.8.12
        environment:
          CIRCLECI: true
          PGHOST: 127.0.0.1
    working_directory: ~/repo

    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Pipfile.lock" }}
      - run: *install-pipenv
      - run:
          name: Install Playwright-deps
          command: |
            sudo `pipenv --venv`/bin/playwright install-deps
      - run: pipenv run playwright install
      - run: pipenv run black-check
      - run: pipenv run ruff
      - run: pipenv run pytest
      - run: pipenv run pytest --cov-report= --cov=postcode_lookup --junitxml=test-reports/junit.xml
      - codecov/upload:
          file: /home/circleci/repo/test-reports/junit.xml
      - store_artifacts:
          path: test-reports
          destination: test-reports
      - store_test_results:
          path: test-reports/junit.xml

  sam_build:
    docker:
      - image: amazon/aws-sam-cli-build-image-python3.8:latest
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo/
      - run: pip install --upgrade pip
      - run: pip install aws-sam-cli==1.71.0
      - run: pip install -r postcode_lookup/requirements.txt
      - run: sam build ${DASH_DASH_DEBUG} --template-file template.yaml
      - persist_to_workspace:
          root: ~/repo/
          paths: [ .aws-sam/build/ ]

  sam_deploy:
    docker:
      - image: cimg/python:3.8.12
    working_directory: ~/repo/
    parameters:
      dc-environment:
        type: enum
        enum: [ development, staging, production ]
    environment:
      SAM_CONFIG_FILE: samconfig.toml
      SAM_LAMBDA_CONFIG_ENV: <<parameters.dc-environment>>
      SAM_PUBLIC_CONFIG_ENV: <<parameters.dc-environment>>-public-access
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo/
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "Pipfile.lock" }}
      - run: *install-pipenv
      - run: pip install aws-sam-cli==1.71.0

      - run:
          name: "pipenv run sam deploy"
          command: |
            pipenv run sam deploy ${DASH_DASH_DEBUG} \
              --config-file ~/repo/${SAM_CONFIG_FILE} \
              --config-env $SAM_LAMBDA_CONFIG_ENV \
              --template-file ~/repo/.aws-sam/build/template.yaml \
              --parameter-overrides "GitHash='$CIRCLE_SHA1'"
      - aws-cli/setup
      - run:
          name: "Update failover page"
          command: |
            # TODO: take bucket name from SAM
            python failover/build.py
            aws s3 cp failover/dist/index.html s3://ec-postcode-lookup.womblelabs.co.uk-failover/index.html
      - run:
          name: "Publish a new Sentry Release"
          command: |
            curl -sL https://sentry.io/get-cli/ | bash
            sentry-cli releases --org democracy-club-gp new $CIRCLE_SHA1 --project ec-postcode-lookup
            sentry-cli releases --org democracy-club-gp set-commits --auto $CIRCLE_SHA1
            sentry-cli releases --org democracy-club-gp finalize $CIRCLE_SHA1 --ignore-missing
workflows:
  version: 2
  test_build_deploy:
    jobs:
      - install_and_update_dependencies
      - test:
          requires:
            - install_and_update_dependencies
      - sam_build:
          requires:
            - test
      - sam_deploy:
          name: sam_deploy_development
          dc-environment: development
          requires:
            - sam_build
          context: [ deployment-development-ec-postcode-lookup ]
          filters: { branches: { only: [ main, master ] } }
